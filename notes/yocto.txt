-------------------------------------------------
FULL REBUILD
-------------------------------------------------
Delete sstate cache folder (determines which recipes need to rebuild)
    rm -rf sstate-cache/

Delete tmp directory (final images)
    rm -rf tmp/

Run bitbake
    bitbake core-image-minimal




#################### NOW ####################
Working in a new sxbit layer, trying to add
lecbt-ethernet-config.cfg	OK

Compare Intel layer in lecbt and vv



lecbt-usbsdcard-config.cfg
no-timelimit-config.cfg

FAIL: cannot activate flash in my layer based on vv layer

FAIL
Working in lecbt layer, trying to add GPIO
VV:
CONFIG_ARCH_WANT_OPTIONAL_GPIOLIB=y
CONFIG_GPIOLIB=y
CONFIG_GPIO_ACPI=y
CONFIG_GPIO_SYSFS=y

CONFIG_GPIO_DEVRES=y

LECBT:
CONFIG_ARCH_WANT_OPTIONAL_GPIOLIB=y
CONFIG_GPIOLIB=y
CONFIG_GPIO_ACPI=y
CONFIG_GPIO_SYSFS=y

CONFIG_GENERIC_GPIO=y
CONFIG_GPIO_ICH=y
CONFIG_GPIO_PCA953X=y
CONFIG_GPIO_PCA953X_IRQ=y
CONFIG_I2C_MUX_GPIO=y

Try1:	FAIL
add CONFIG_GPIO_DEVRES=y to lecbt







#############################################





#STEP 0: enable virtualization in BIOS!

#install virtualization packages
sudo apt-get install -y qemu-kvm libvirt-bin virtinst bridge-utils cpu-checker


#create virtual machine with Ubuntu 14.04 and contunue on it

#install yocto prerequisites
sudo apt-get -y install socat gawk wget git-core diffstat unzip texinfo build-essential chrpath libsdl1.2-dev xterm libncurses5-dev g++

#get yocto sources Atom Web page https://www.yoctoproject.org/downloads/bsps/jethro20/valley-island
wget http://downloads.yoctoproject.org/releases/yocto/yocto-2.0.2/poky-jethro-14.0.2.tar.bz2
wget http://downloads.yoctoproject.org/releases/yocto/yocto-2.0/machines/valleyisland/valleyisland-4.0-jethro-2.0.tar.bz2?bsp=valley_island


tar xf poky-jethro-14.0.2.tar.bz2 
tar xf valleyisland-4.0-jethro-2.0.tar.bz2 
mv valleyisland-4.0-jethro-2.0 poky-jethro-14.0.2/meta-intel

#init build environment
cd poky-jethro
. ./oe-init-build-env

copy bblayers.conf and local.conf to build/conf ??OR?? meta-intel/conf (first try build/conf)
enable appropriate machine type in local.conf
adjust paths in bblayers.conf

#build
bitbake core-image-minimal


#output image is in
ls -l ~/poky-jethro/build/tmp/deploy/images/valleyisland-64/



#kernel modification and rebuild
bitbake linux-yocto -c menuconfig
bitbake linux-yocto -C compile && 
bitbake core-image-minimal	#to rebuild the image


#kernel config location
/home/jackhab/poky-jethro/meta-intel/tmp/work/corei7-64-intel-common-poky-linux/linux-yocto/3.14.62+gitAUTOINC+189154c0ed_27d9a1914b-r0/linux-corei7-64-intel-common-standard-build/.config
/home/jenia/poky-jethro/build/tmp/work/corei7-64-intel-common-poky-linux/linux-yocto/3.14.62+gitAUTOINC+189154c0ed_27d9a1914b-r0/linux-corei7-64-intel-common-standard-build
                                                                         


#list core pre-defined images
find meta -name 'core-image*'

#list layers
bitbake show-layers

